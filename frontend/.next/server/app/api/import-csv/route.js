/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/import-csv/route";
exports.ids = ["app/api/import-csv/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fimport-csv%2Froute&page=%2Fapi%2Fimport-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fimport-csv%2Froute.ts&appDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fimport-csv%2Froute&page=%2Fapi%2Fimport-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fimport-csv%2Froute.ts&appDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_douglas_racing_lucas_frontend_src_app_api_import_csv_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./src/app/api/import-csv/route.ts */ \"(rsc)/./src/app/api/import-csv/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/import-csv/route\",\n        pathname: \"/api/import-csv\",\n        filename: \"route\",\n        bundlePath: \"app/api/import-csv/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/douglas/racing-lucas/frontend/src/app/api/import-csv/route.ts\",\n    nextConfigOutput,\n    userland: _Users_douglas_racing_lucas_frontend_src_app_api_import_csv_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/import-csv/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fimport-csv%2Froute&page=%2Fapi%2Fimport-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fimport-csv%2Froute.ts&appDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/import-csv/route.ts":
/*!*****************************************!*\
  !*** ./src/app/api/import-csv/route.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/supabase */ \"(rsc)/./src/lib/supabase.ts\");\n\n\nasync function POST(request) {\n    try {\n        const formData = await request.formData();\n        const file = formData.get('file');\n        const platform = formData.get('platform') || 'kiwify';\n        if (!file) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Nenhum arquivo enviado'\n            }, {\n                status: 400\n            });\n        }\n        if (!file.name.endsWith('.csv')) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Apenas arquivos CSV são suportados'\n            }, {\n                status: 400\n            });\n        }\n        // Ler o conteúdo do arquivo CSV\n        const csvContent = await file.text();\n        const csvLines = csvContent.split('\\n');\n        if (csvLines.length <= 1) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'CSV deve conter pelo menos um cabeçalho e uma linha de dados'\n            }, {\n                status: 400\n            });\n        }\n        // Parse CSV mais robusto para lidar com vírgulas dentro de campos\n        const csvData = [];\n        // Parse do cabeçalho\n        const headers = parseCSVLine(csvLines[0]);\n        console.log('Headers encontrados:', headers);\n        // Parse das linhas de dados\n        for(let i = 1; i < csvLines.length; i++){\n            const line = csvLines[i].trim();\n            if (!line) continue; // Pular linhas vazias\n            const values = parseCSVLine(line);\n            if (values.length < headers.length * 0.8) {\n                console.log(`Linha ${i + 1} ignorada - muito poucas colunas (${values.length} vs ${headers.length})`);\n                continue;\n            }\n            const row = {};\n            headers.forEach((header, index)=>{\n                row[header] = values[index] || ''; // Usar string vazia se valor não existir\n            });\n            csvData.push(row);\n        }\n        console.log(`Processando ${csvData.length} linhas do CSV`);\n        // Converter dados do CSV para formato de webhook\n        const eventsToInsert = csvData.map((row)=>{\n            let webhookPayload;\n            // Mapear campos baseado na plataforma\n            if (platform === 'kiwify') {\n                // Mapeamento COMPLETO específico para Kiwify (todos os campos do webhook)\n                webhookPayload = {\n                    order_id: row['ID da venda'] || generateOrderId(),\n                    order_status: mapKiwifyStatus(row['Status'] || 'approved'),\n                    webhook_event_type: mapKiwifyStatus(row['Status'] || 'approved'),\n                    order_date: (()=>{\n                        const rawDate = row['Data de Criação'];\n                        if (rawDate) {\n                            // Formato da Kiwify: DD/MM/YYYY HH:mm:ss\n                            const dateTimeParts = rawDate.split(' ');\n                            const datePart = dateTimeParts[0] // DD/MM/YYYY\n                            ;\n                            const timePart = dateTimeParts[1] || '00:00:00' // HH:mm:ss\n                            ;\n                            const dateParts = datePart.split('/');\n                            if (dateParts.length === 3) {\n                                // Converter DD/MM/YYYY para YYYY-MM-DD\n                                const day = dateParts[0].padStart(2, '0');\n                                const month = dateParts[1].padStart(2, '0');\n                                const year = dateParts[2];\n                                return new Date(`${year}-${month}-${day}T${timePart}`).toISOString();\n                            }\n                            return new Date(rawDate).toISOString();\n                        }\n                        return new Date().toISOString();\n                    })(),\n                    Product: {\n                        product_id: row['ID da venda'] || 'imported_kiwify',\n                        product_name: row['Produto'] || 'Produto Importado',\n                        offer_name: row['Oferta'] || null\n                    },\n                    Customer: {\n                        full_name: row['Cliente'] || 'Cliente Importado',\n                        email: row['Email'] || 'imported@email.com',\n                        cpf: row['CPF / CNPJ'] || null,\n                        phone_number: row['Celular'] || null,\n                        address: {\n                            street: row['Endereço'] || null,\n                            number: row['Numero'] || null,\n                            complement: row['Complemento'] || null,\n                            neighborhood: row['Bairro'] || null,\n                            city: row['Cidade'] || null,\n                            state: row['Estado'] || null,\n                            zipcode: row['CEP'] || null,\n                            country: row['País'] || 'BR'\n                        }\n                    },\n                    Commissions: {\n                        currency: row['Moeda'] || 'BRL',\n                        kiwify_fee: parseFloat(row['Taxas'] || '0') * 100,\n                        deposit_date: row['Data de Depósito'] || null,\n                        funds_status: row['Status do recebimento'] || null,\n                        charge_amount: parseFloat(row['Total com acréscimo'] || '0') * 100,\n                        my_commission: parseFloat(row['Valor líquido'] || '0') * 100,\n                        product_base_price: parseFloat(row['Preço base do produto'] || '0') * 100,\n                        settlement_amount: parseFloat(row['Valor líquido'] || '0') * 100,\n                        kiwify_fee_currency: row['Moeda das taxas'] || 'BRL',\n                        estimated_deposit_date: row['Data de liberação estimada'] || null,\n                        product_base_price_currency: row['Moeda do preço do produto'] || 'BRL',\n                        settlement_amount_currency: row['Moeda'] || 'BRL'\n                    },\n                    Payment: {\n                        method: row['Pagamento'] || 'unknown',\n                        installments: parseInt(row['Parcelas'] || '1'),\n                        card_last_digits: row['Últimos dígitos do Cartão'] || null,\n                        type: row['Tipo'] || 'producer',\n                        refused_reason: row['Motivo da recusa'] || null\n                    },\n                    Tracking: {\n                        ip: row['IP'] || null,\n                        source: row['Tracking src'] || null,\n                        utm_source: parseJSON(row['Tracking utm_source']) || row['Tracking utm_source'] || null,\n                        utm_medium: parseJSON(row['Tracking utm_medium']) || row['Tracking utm_medium'] || null,\n                        utm_campaign: parseJSON(row['Tracking utm_campaign']) || row['Tracking utm_campaign'] || null,\n                        utm_content: parseJSON(row['Tracking utm_content']) || row['Tracking utm_content'] || null,\n                        utm_term: parseJSON(row['Tracking utm_term']) || row['Tracking utm_term'] || null,\n                        s1: parseJSON(row['Tracking s1']) || row['Tracking s1'] || null,\n                        s2: parseJSON(row['Tracking s2']) || row['Tracking s2'] || null,\n                        s3: parseJSON(row['Tracking s3']) || row['Tracking s3'] || null,\n                        sck: parseJSON(row['Tracking sck']) || row['Tracking sck'] || null\n                    },\n                    Tax: {\n                        tax_amount: parseFloat(row['Imposto'] || '0') * 100,\n                        invoice_id: row['ID Nota fiscal'] || null,\n                        invoice_status: row['Status Nota fiscal'] || null,\n                        invoice_issuer: row['Nota fisca emitada por'] || null,\n                        invoice_software: row['Software Nota fiscal'] || null,\n                        invoice_amount: parseFloat(row['Valor Nota fiscal'] || '0') * 100\n                    },\n                    Network: {\n                        is_kiwify_network: row['Kiwify Network'] === 'true',\n                        one_click_provider: row['Provedor de One Click'] || null\n                    },\n                    Coupon: {\n                        code: row['Coupon Code'] || null,\n                        discount_percentage: parseFloat(row['Discount Percentage'] || '0')\n                    },\n                    Affiliate: {\n                        name: row['Nome do afiliado'] || null,\n                        document: row['Documento do afiliado'] || null,\n                        email: row['Email do afiliado'] || null,\n                        commission: parseFloat(row['Comissão do afiliado'] || '0') * 100\n                    },\n                    Coproducers: {\n                        names: parseJSON(row['Nomes dos coprodutores']) || row['Nomes dos coprodutores'] || null,\n                        documents: parseJSON(row['Documentos dos coprodutores']) || row['Documentos dos coprodutores'] || null,\n                        emails: parseJSON(row['Emails dos coprodutores']) || row['Emails dos coprodutores'] || null,\n                        commissions: parseJSON(row['Comissões dos coprodutores']) || row['Comissões dos coprodutores'] || null\n                    },\n                    // Metadados de importação\n                    import_source: 'csv_import',\n                    imported_at: new Date().toISOString(),\n                    original_csv_row: row // Para debug se necessário\n                };\n            } else {\n                // Mapeamento genérico para outras plataformas (fallback)\n                webhookPayload = {\n                    order_id: row['Order ID'] || row['order_id'] || generateOrderId(),\n                    order_status: mapStatus(row['Status'] || row['order_status'] || 'approved'),\n                    webhook_event_type: mapStatus(row['Status'] || row['order_status'] || 'approved'),\n                    Product: {\n                        product_id: row['Product ID'] || row['product_id'] || 'imported',\n                        product_name: row['Product Name'] || row['product_name'] || 'Produto Importado'\n                    },\n                    Customer: {\n                        full_name: row['Customer Name'] || row['customer_name'] || row['name'] || 'Cliente Importado',\n                        email: row['Customer Email'] || row['customer_email'] || row['email'] || 'imported@email.com'\n                    },\n                    Commissions: {\n                        currency: 'BRL',\n                        my_commission: parseFloat(row['Commission'] || row['commission'] || row['net_amount'] || '0') * 100,\n                        product_base_price: parseFloat(row['Price'] || row['gross_amount'] || row['value'] || '0') * 100,\n                        charge_amount: parseFloat(row['Price'] || row['gross_amount'] || row['value'] || '0') * 100\n                    }\n                };\n            }\n            // Data específica por plataforma\n            let eventDate;\n            if (platform === 'kiwify') {\n                // Converter data brasileira (DD/MM/YYYY HH:mm:ss) para formato ISO\n                const rawDate = row['Data de Criação'];\n                if (rawDate) {\n                    const dateTimeParts = rawDate.split(' ');\n                    const datePart = dateTimeParts[0] // DD/MM/YYYY\n                    ;\n                    const timePart = dateTimeParts[1] || '00:00:00' // HH:mm:ss\n                    ;\n                    const dateParts = datePart.split('/');\n                    if (dateParts.length === 3) {\n                        // Converter DD/MM/YYYY para YYYY-MM-DD\n                        const day = dateParts[0].padStart(2, '0');\n                        const month = dateParts[1].padStart(2, '0');\n                        const year = dateParts[2];\n                        eventDate = new Date(`${year}-${month}-${day}T${timePart}`).toISOString();\n                    } else {\n                        eventDate = new Date(rawDate).toISOString();\n                    }\n                } else {\n                    eventDate = new Date().toISOString();\n                }\n            } else {\n                eventDate = row['Date'] ? new Date(row['Date']).toISOString() : new Date().toISOString();\n            }\n            return {\n                event_type: 'imported_' + (platform === 'kiwify' ? mapKiwifyStatus(row['Status'] || 'paid') : mapStatus(row['Status'] || row['order_status'] || 'approved')),\n                platform_id: 1,\n                payload_json: webhookPayload,\n                received_at: eventDate,\n                import_tag: `imported_${platform}_${Date.now()}`,\n                event_hash: generateEventHash(webhookPayload) // Hash único para o evento\n            };\n        });\n        // Inserir no banco de dados\n        let insertedCount = 0;\n        let errors = [];\n        // Inserir em lotes para evitar timeout\n        const batchSize = 50;\n        for(let i = 0; i < eventsToInsert.length; i += batchSize){\n            const batch = eventsToInsert.slice(i, i + batchSize);\n            const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_1__.supabase.from('raw_events').insert(batch).select('id');\n            if (error) {\n                console.error(`Erro no lote ${Math.floor(i / batchSize) + 1}:`, error);\n                errors.push(error);\n            } else {\n                insertedCount += data?.length || 0;\n            }\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `Importação concluída: ${insertedCount} pedidos inseridos`,\n            total_processed: csvData.length,\n            inserted: insertedCount,\n            errors: errors.length,\n            platform: platform\n        });\n    } catch (error) {\n        console.error('Erro na importação:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: 'Erro interno do servidor',\n            details: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\nfunction mapStatus(status) {\n    const normalizedStatus = status.toLowerCase();\n    if (normalizedStatus.includes('approved') || normalizedStatus.includes('paid') || normalizedStatus.includes('pago')) {\n        return 'paid';\n    }\n    if (normalizedStatus.includes('pending') || normalizedStatus.includes('pendente')) {\n        return 'pending';\n    }\n    if (normalizedStatus.includes('refund') || normalizedStatus.includes('reembolso')) {\n        return 'refunded';\n    }\n    if (normalizedStatus.includes('cancel') || normalizedStatus.includes('cancelado')) {\n        return 'canceled';\n    }\n    return 'paid' // default para dados importados\n    ;\n}\nfunction mapKiwifyStatus(status) {\n    const normalizedStatus = status.toLowerCase();\n    // Mapeamento específico para status da Kiwify\n    if (normalizedStatus === 'paid') {\n        return 'paid';\n    }\n    if (normalizedStatus === 'waiting_payment') {\n        return 'pending';\n    }\n    if (normalizedStatus === 'refunded') {\n        return 'refunded';\n    }\n    if (normalizedStatus === 'canceled') {\n        return 'canceled';\n    }\n    if (normalizedStatus === 'chargeback') {\n        return 'chargeback';\n    }\n    return 'paid' // default\n    ;\n}\nfunction generateOrderId() {\n    return `imported_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n}\nfunction parseJSON(value) {\n    if (!value || value === '') return null;\n    try {\n        return JSON.parse(value);\n    } catch  {\n        return value // Retornar como string se não for JSON válido\n        ;\n    }\n}\nfunction parseCSVLine(line) {\n    const result = [];\n    let current = '';\n    let inQuotes = false;\n    for(let i = 0; i < line.length; i++){\n        const char = line[i];\n        if (char === '\"') {\n            inQuotes = !inQuotes;\n        } else if (char === ',' && !inQuotes) {\n            result.push(current.trim());\n            current = '';\n        } else {\n            current += char;\n        }\n    }\n    result.push(current.trim());\n    return result;\n}\nfunction generateEventHash(payload) {\n    // Gerar hash simples baseado no conteúdo do payload\n    const content = JSON.stringify(payload);\n    let hash = 0;\n    for(let i = 0; i < content.length; i++){\n        const char = content.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Converter para 32-bit integer\n    }\n    return `imported_${Math.abs(hash).toString(16)}_${Date.now()}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/import-csv/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase.ts":
/*!*****************************!*\
  !*** ./src/lib/supabase.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: () => (/* binding */ supabase)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/.pnpm/@supabase+supabase-js@2.56.1/node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://camdhrxwfqkxamdxyviv.supabase.co\";\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNhbWRocnh3ZnFreGFtZHh5dml2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3Nzk3MTIsImV4cCI6MjA3MjM1NTcxMn0.NtGdZqfHYHUCjAmOrtrxD4a4pb2riyhjAbQ26aGa-n0\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLGNBQWNDLDBDQUFvQztBQUN4RCxNQUFNRyxrQkFBa0JILGtOQUF5QztBQUUxRCxNQUFNSyxXQUFXUCxtRUFBWUEsQ0FBQ0MsYUFBYUksaUJBQWdCIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhcy9yYWNpbmctbHVjYXMvZnJvbnRlbmQvc3JjL2xpYi9zdXBhYmFzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5cbmNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIVxuY29uc3Qgc3VwYWJhc2VBbm9uS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkhXG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChzdXBhYmFzZVVybCwgc3VwYWJhc2VBbm9uS2V5KVxuXG4vLyBUeXBlcyBmb3Igb3VyIGRhdGFiYXNlXG5leHBvcnQgdHlwZSBQbGF0Zm9ybSA9IHtcbiAgaWQ6IG51bWJlclxuICBuYW1lOiBzdHJpbmdcbn1cblxuZXhwb3J0IHR5cGUgQ3VzdG9tZXIgPSB7XG4gIGlkOiBzdHJpbmdcbiAgZW1haWw6IHN0cmluZ1xuICBwaG9uZV9lMTY0Pzogc3RyaW5nXG4gIGNwZj86IHN0cmluZ1xuICBuYW1lPzogc3RyaW5nXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgdHlwZSBPcmRlciA9IHtcbiAgaWQ6IHN0cmluZ1xuICBwbGF0Zm9ybV9pZDogbnVtYmVyXG4gIHBsYXRmb3JtX29yZGVyX2lkOiBzdHJpbmdcbiAgY3VzdG9tZXJfaWQ/OiBzdHJpbmdcbiAgb3JkZXJfZGF0ZT86IHN0cmluZ1xuICBjdXJyZW5jeTogc3RyaW5nXG4gIGdyb3NzX2Ftb3VudD86IG51bWJlclxuICBuZXRfYW1vdW50PzogbnVtYmVyXG4gIHN0YXR1czogJ3BlbmRpbmcnIHwgJ3BhaWQnIHwgJ3JlZnVuZGVkJyB8ICdjaGFyZ2ViYWNrJyB8ICdjYW5jZWxlZCdcbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHBsYXRmb3JtPzogUGxhdGZvcm1cbiAgY3VzdG9tZXI/OiBDdXN0b21lclxufVxuXG5leHBvcnQgdHlwZSBSYXdFdmVudCA9IHtcbiAgaWQ6IG51bWJlclxuICBwbGF0Zm9ybV9pZDogbnVtYmVyXG4gIHJlY2VpdmVkX2F0OiBzdHJpbmdcbiAgZXZlbnRfdHlwZT86IHN0cmluZ1xuICBwYXlsb2FkX2pzb246IGFueVxuICBldmVudF9oYXNoOiBzdHJpbmdcbiAgcGxhdGZvcm0/OiBQbGF0Zm9ybVxufVxuXG5leHBvcnQgdHlwZSBFdmVudEVycm9yID0ge1xuICBpZDogbnVtYmVyXG4gIHBsYXRmb3JtX2lkPzogbnVtYmVyXG4gIGVycm9yX2F0OiBzdHJpbmdcbiAgcmVhc29uPzogc3RyaW5nXG4gIHBheWxvYWRfanNvbjogYW55XG4gIHBsYXRmb3JtPzogUGxhdGZvcm1cbn1cblxuZXhwb3J0IHR5cGUgQWRJbnNpZ2h0ID0ge1xuICBpZDogbnVtYmVyXG4gIGRhdGU6IHN0cmluZ1xuICBhY2NvdW50X2lkPzogc3RyaW5nXG4gIGNhbXBhaWduX2lkPzogc3RyaW5nXG4gIGFkc2V0X2lkPzogc3RyaW5nXG4gIGFkX2lkPzogc3RyaW5nXG4gIHNwZW5kPzogbnVtYmVyXG4gIGltcHJlc3Npb25zPzogbnVtYmVyXG4gIGNsaWNrcz86IG51bWJlclxuICBsZWFkcz86IG51bWJlclxuICBjcmVhdGVkX2F0OiBzdHJpbmdcbn0iXSwibmFtZXMiOlsiY3JlYXRlQ2xpZW50Iiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VBbm9uS2V5IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVkiLCJzdXBhYmFzZSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!*********************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \*********************************************************************************************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1","vendor-chunks/tr46@0.0.3","vendor-chunks/@supabase+auth-js@2.71.1","vendor-chunks/@supabase+realtime-js@2.15.4","vendor-chunks/@supabase+postgrest-js@1.21.3","vendor-chunks/@supabase+node-fetch@2.6.15","vendor-chunks/whatwg-url@5.0.0","vendor-chunks/@supabase+storage-js@2.11.0","vendor-chunks/@supabase+supabase-js@2.56.1","vendor-chunks/@supabase+functions-js@2.4.5","vendor-chunks/webidl-conversions@3.0.1"], () => (__webpack_exec__("(rsc)/./node_modules/.pnpm/next@15.5.2_react-dom@19.1.1_react@19.1.1__react@19.1.1/node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fimport-csv%2Froute&page=%2Fapi%2Fimport-csv%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fimport-csv%2Froute.ts&appDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdouglas%2Fracing-lucas%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();