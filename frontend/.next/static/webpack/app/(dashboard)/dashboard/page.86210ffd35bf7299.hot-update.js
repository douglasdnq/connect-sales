"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteEvent: () => (/* binding */ deleteEvent),\n/* harmony export */   getAdInsights: () => (/* binding */ getAdInsights),\n/* harmony export */   getCustomers: () => (/* binding */ getCustomers),\n/* harmony export */   getDashboardStats: () => (/* binding */ getDashboardStats),\n/* harmony export */   getEventErrors: () => (/* binding */ getEventErrors),\n/* harmony export */   getOrderById: () => (/* binding */ getOrderById),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   getPlatforms: () => (/* binding */ getPlatforms),\n/* harmony export */   getRawEvents: () => (/* binding */ getRawEvents),\n/* harmony export */   getWebhookEvents: () => (/* binding */ getWebhookEvents)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n// Dashboard data fetching\nasync function getDashboardStats() {\n    // Get recent orders count\n    const { data: orders } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select('id, gross_amount, status, created_at').gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()).order('created_at', {\n        ascending: false\n    });\n    // Get total revenue this month\n    const startOfMonth = new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString();\n    const { data: monthlyOrders } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select('gross_amount, net_amount').eq('status', 'paid').gte('created_at', startOfMonth);\n    // Get recent events\n    const { data: recentEvents } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select('id, event_type, received_at, platform_id, platforms(name)').order('received_at', {\n        ascending: false\n    }).limit(10);\n    // Get error count\n    const { count: errorCount } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('event_errors').select('id', {\n        count: 'exact'\n    }).gte('error_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());\n    const totalRevenue = (monthlyOrders === null || monthlyOrders === void 0 ? void 0 : monthlyOrders.reduce((sum, order)=>sum + (order.gross_amount || 0), 0)) || 0;\n    const totalOrders = (orders === null || orders === void 0 ? void 0 : orders.length) || 0;\n    const paidOrders = (orders === null || orders === void 0 ? void 0 : orders.filter((o)=>o.status === 'paid').length) || 0;\n    return {\n        totalOrders,\n        paidOrders,\n        totalRevenue,\n        recentEvents: recentEvents || [],\n        errorCount: errorCount || 0\n    };\n}\n// Orders - agora buscando diretamente dos webhooks da Kiwify\nasync function getOrders(limit, startDate, endDate) {\n    let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      id,\\n      event_type,\\n      payload_json,\\n      received_at,\\n      platforms(name)\\n    \");\n    // Aplicar filtro de data início se fornecido\n    if (startDate) {\n        query = query.gte('received_at', \"\".concat(startDate, \"T00:00:00.000Z\"));\n    }\n    // Aplicar filtro de data fim se fornecido\n    if (endDate) {\n        query = query.lte('received_at', \"\".concat(endDate, \"T23:59:59.999Z\"));\n    }\n    const { data, error } = await query.order('received_at', {\n        ascending: false\n    });\n    if (error) return {\n        data: null,\n        error\n    };\n    // Transformar dados do webhook para formato de pedidos\n    const allTransformedData = data === null || data === void 0 ? void 0 : data.map((event)=>{\n        var _event_payload_json, _event_payload_json_Commissions, _event_payload_json1, _event_payload_json_Customer, _event_payload_json2, _event_payload_json_Customer1, _event_payload_json3, _event_payload_json_Product, _event_payload_json4, _event_payload_json_Product1, _event_payload_json5, _event_platforms, _event_payload_json_Customer2, _event_payload_json6, _event_payload_json_Customer3, _event_payload_json7;\n        return {\n            id: event.id.toString(),\n            platform_order_id: ((_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.order_id) || 'N/A',\n            order_date: event.received_at,\n            created_at: event.received_at,\n            status: (()=>{\n                var _event_payload_json_order_status, _event_payload_json, _event_payload_json_webhook_event_type, _event_payload_json1;\n                const orderStatus = (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : (_event_payload_json_order_status = _event_payload_json.order_status) === null || _event_payload_json_order_status === void 0 ? void 0 : _event_payload_json_order_status.toLowerCase();\n                const webhookEvent = (_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_webhook_event_type = _event_payload_json1.webhook_event_type) === null || _event_payload_json_webhook_event_type === void 0 ? void 0 : _event_payload_json_webhook_event_type.toLowerCase();\n                // Debug do status\n                console.log(\"Status debug - order_status: \".concat(orderStatus, \", webhook_event_type: \").concat(webhookEvent));\n                // Mapear status baseado nos campos da Kiwify\n                if (orderStatus === 'approved' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('approved'))) return 'paid';\n                if (orderStatus === 'paid' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('paid'))) return 'paid';\n                if (orderStatus === 'refunded' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('refund'))) return 'refunded';\n                if (orderStatus === 'canceled' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('cancel'))) return 'canceled';\n                if (orderStatus === 'chargeback' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('chargeback'))) return 'chargeback';\n                return 'pending' // default\n                ;\n            })(),\n            gross_amount: (()=>{\n                var _event_payload_json_Commissions, _event_payload_json;\n                const rawValue = ((_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : (_event_payload_json_Commissions = _event_payload_json.Commissions) === null || _event_payload_json_Commissions === void 0 ? void 0 : _event_payload_json_Commissions.product_base_price) || 0;\n                const convertedValue = rawValue / 100;\n                return convertedValue;\n            })(),\n            net_amount: (()=>{\n                var _event_payload_json;\n                const commissions = (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.Commissions;\n                // Campo principal para comissões na Kiwify: my_commission\n                const myCommission = commissions === null || commissions === void 0 ? void 0 : commissions.my_commission;\n                // Campo usado nos Example Products: settlement_amount  \n                const settlementAmount = commissions === null || commissions === void 0 ? void 0 : commissions.settlement_amount;\n                // Priorizar my_commission que é usado nas ordens reais da Kiwify\n                const rawValue = myCommission || settlementAmount || 0;\n                const convertedValue = rawValue / 100;\n                return convertedValue;\n            })(),\n            currency: ((_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_Commissions = _event_payload_json1.Commissions) === null || _event_payload_json_Commissions === void 0 ? void 0 : _event_payload_json_Commissions.currency) || 'BRL',\n            customer_name: ((_event_payload_json2 = event.payload_json) === null || _event_payload_json2 === void 0 ? void 0 : (_event_payload_json_Customer = _event_payload_json2.Customer) === null || _event_payload_json_Customer === void 0 ? void 0 : _event_payload_json_Customer.full_name) || 'N/A',\n            customer_email: ((_event_payload_json3 = event.payload_json) === null || _event_payload_json3 === void 0 ? void 0 : (_event_payload_json_Customer1 = _event_payload_json3.Customer) === null || _event_payload_json_Customer1 === void 0 ? void 0 : _event_payload_json_Customer1.email) || 'N/A',\n            product_name: ((_event_payload_json4 = event.payload_json) === null || _event_payload_json4 === void 0 ? void 0 : (_event_payload_json_Product = _event_payload_json4.Product) === null || _event_payload_json_Product === void 0 ? void 0 : _event_payload_json_Product.product_name) || 'N/A',\n            product_id: ((_event_payload_json5 = event.payload_json) === null || _event_payload_json5 === void 0 ? void 0 : (_event_payload_json_Product1 = _event_payload_json5.Product) === null || _event_payload_json_Product1 === void 0 ? void 0 : _event_payload_json_Product1.product_id) || 'N/A',\n            platform_name: ((_event_platforms = event.platforms) === null || _event_platforms === void 0 ? void 0 : _event_platforms.name) || 'Kiwify',\n            webhook_payload: event.payload_json,\n            import_tag: event.import_tag,\n            is_imported: !!event.import_tag,\n            platforms: event.platforms,\n            customers: {\n                name: (_event_payload_json6 = event.payload_json) === null || _event_payload_json6 === void 0 ? void 0 : (_event_payload_json_Customer2 = _event_payload_json6.Customer) === null || _event_payload_json_Customer2 === void 0 ? void 0 : _event_payload_json_Customer2.full_name,\n                email: (_event_payload_json7 = event.payload_json) === null || _event_payload_json7 === void 0 ? void 0 : (_event_payload_json_Customer3 = _event_payload_json7.Customer) === null || _event_payload_json_Customer3 === void 0 ? void 0 : _event_payload_json_Customer3.email\n            }\n        };\n    });\n    // Agrupar por platform_order_id e manter apenas o mais recente de cada pedido\n    const uniqueOrdersMap = new Map();\n    allTransformedData === null || allTransformedData === void 0 ? void 0 : allTransformedData.forEach((order)=>{\n        const orderId = order.platform_order_id;\n        // Pular pedidos sem ID válido (para evitar agrupar todos os \"N/A\")\n        if (!orderId || orderId === 'N/A') {\n            // Usar o ID do evento como chave única para pedidos sem order_id\n            uniqueOrdersMap.set(\"event_\".concat(order.id), order);\n            return;\n        }\n        // Se já existe um pedido com este ID, verificar qual é mais recente\n        if (uniqueOrdersMap.has(orderId)) {\n            const existingOrder = uniqueOrdersMap.get(orderId);\n            // Comparar datas - manter o mais recente\n            if (new Date(order.order_date) > new Date(existingOrder.order_date)) {\n                uniqueOrdersMap.set(orderId, order);\n            }\n        } else {\n            // Primeiro registro deste pedido\n            uniqueOrdersMap.set(orderId, order);\n        }\n    });\n    // Converter Map de volta para array e ordenar por data (mais recente primeiro)\n    const transformedData = Array.from(uniqueOrdersMap.values()).sort((a, b)=>new Date(b.order_date).getTime() - new Date(a.order_date).getTime());\n    return {\n        data: transformedData,\n        error\n    };\n}\n// Função para deletar um evento/pedido\nasync function deleteEvent(eventId) {\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').delete().eq('id', eventId);\n    return {\n        error\n    };\n}\nasync function getOrderById(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select(\"\\n      *,\\n      platforms(name),\\n      customers(*)\\n    \").eq('id', id).single();\n    return {\n        data,\n        error\n    };\n}\n// Events\nasync function getRawEvents() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      *,\\n      platforms(name)\\n    \").order('received_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Webhook Events (atual) - usando raw_events\nasync function getWebhookEvents() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      id,\\n      event_type,\\n      payload_json,\\n      received_at,\\n      platform_id,\\n      platforms(name)\\n    \").order('received_at', {\n        ascending: false\n    }).limit(limit);\n    // Transformar para formato esperado pela página\n    const transformedData = data === null || data === void 0 ? void 0 : data.map((event)=>{\n        var _event_platforms, _event_payload_json, _event_payload_json_Customer, _event_payload_json1;\n        return {\n            id: event.id.toString(),\n            platform: ((_event_platforms = event.platforms) === null || _event_platforms === void 0 ? void 0 : _event_platforms.name) || 'unknown',\n            event_type: event.event_type || 'unknown',\n            order_id: (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.order_id,\n            customer_email: (_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_Customer = _event_payload_json1.Customer) === null || _event_payload_json_Customer === void 0 ? void 0 : _event_payload_json_Customer.email,\n            processed: true,\n            error_message: null,\n            payload: event.payload_json,\n            created_at: event.received_at\n        };\n    });\n    return {\n        data: transformedData,\n        error\n    };\n}\nasync function getEventErrors() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('event_errors').select(\"\\n      *,\\n      platforms(name)\\n    \").order('error_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Customers\nasync function getCustomers() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('customers').select('*').order('created_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Platforms\nasync function getPlatforms() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('platforms').select('*').order('name');\n    return {\n        data: data,\n        error\n    };\n}\n// Ad Insights\nasync function getAdInsights() {\n    let days = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 30;\n    const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('ad_insights_daily').select('*').gte('date', startDate).order('date', {\n        ascending: false\n    });\n    return {\n        data: data,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/database.ts\n"));

/***/ })

});