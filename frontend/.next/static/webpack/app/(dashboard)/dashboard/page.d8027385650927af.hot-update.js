"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(dashboard)/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/database.ts":
/*!*****************************!*\
  !*** ./src/lib/database.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteEvent: () => (/* binding */ deleteEvent),\n/* harmony export */   getAdInsights: () => (/* binding */ getAdInsights),\n/* harmony export */   getCustomers: () => (/* binding */ getCustomers),\n/* harmony export */   getDashboardStats: () => (/* binding */ getDashboardStats),\n/* harmony export */   getEventErrors: () => (/* binding */ getEventErrors),\n/* harmony export */   getOrderById: () => (/* binding */ getOrderById),\n/* harmony export */   getOrders: () => (/* binding */ getOrders),\n/* harmony export */   getPlatforms: () => (/* binding */ getPlatforms),\n/* harmony export */   getRawEvents: () => (/* binding */ getRawEvents),\n/* harmony export */   getWebhookEvents: () => (/* binding */ getWebhookEvents)\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n// Dashboard data fetching\nasync function getDashboardStats() {\n    // Get recent orders count\n    const { data: orders } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select('id, gross_amount, status, created_at').gte('created_at', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()).order('created_at', {\n        ascending: false\n    });\n    // Get total revenue this month\n    const startOfMonth = new Date(new Date().getFullYear(), new Date().getMonth(), 1).toISOString();\n    const { data: monthlyOrders } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select('gross_amount, net_amount').eq('status', 'paid').gte('created_at', startOfMonth);\n    // Get recent events\n    const { data: recentEvents } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select('id, event_type, received_at, platform_id, platforms(name)').order('received_at', {\n        ascending: false\n    }).limit(10);\n    // Get error count\n    const { count: errorCount } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('event_errors').select('id', {\n        count: 'exact'\n    }).gte('error_at', new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString());\n    const totalRevenue = (monthlyOrders === null || monthlyOrders === void 0 ? void 0 : monthlyOrders.reduce((sum, order)=>sum + (order.gross_amount || 0), 0)) || 0;\n    const totalOrders = (orders === null || orders === void 0 ? void 0 : orders.length) || 0;\n    const paidOrders = (orders === null || orders === void 0 ? void 0 : orders.filter((o)=>o.status === 'paid').length) || 0;\n    return {\n        totalOrders,\n        paidOrders,\n        totalRevenue,\n        recentEvents: recentEvents || [],\n        errorCount: errorCount || 0\n    };\n}\n// Orders - agora buscando diretamente dos webhooks da Kiwify\nasync function getOrders(limit, startDate, endDate) {\n    let query = _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      id,\\n      event_type,\\n      payload_json,\\n      received_at,\\n      import_tag,\\n      platforms(name)\\n    \");\n    // Aplicar filtro de data início se fornecido\n    if (startDate) {\n        query = query.gte('received_at', \"\".concat(startDate, \"T00:00:00.000Z\"));\n    }\n    // Aplicar filtro de data fim se fornecido\n    if (endDate) {\n        query = query.lte('received_at', \"\".concat(endDate, \"T23:59:59.999Z\"));\n    }\n    const { data, error } = await query.order('received_at', {\n        ascending: false\n    });\n    if (error) return {\n        data: null,\n        error\n    };\n    // Transformar dados do webhook para formato de pedidos\n    const allTransformedData = data === null || data === void 0 ? void 0 : data.map((event)=>{\n        var _event_payload_json, _event_payload_json_Commissions, _event_payload_json1, _event_payload_json_Customer, _event_payload_json2, _event_payload_json_Customer1, _event_payload_json3, _event_payload_json_Product, _event_payload_json4, _event_payload_json_Product1, _event_payload_json5, _event_platforms, _event_payload_json_Customer2, _event_payload_json6, _event_payload_json_Customer3, _event_payload_json7;\n        return {\n            id: event.id.toString(),\n            platform_order_id: ((_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.order_id) || 'N/A',\n            order_date: event.received_at,\n            created_at: event.received_at,\n            status: (()=>{\n                var _event_payload_json_order_status, _event_payload_json, _event_payload_json_webhook_event_type, _event_payload_json1;\n                const orderStatus = (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : (_event_payload_json_order_status = _event_payload_json.order_status) === null || _event_payload_json_order_status === void 0 ? void 0 : _event_payload_json_order_status.toLowerCase();\n                const webhookEvent = (_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_webhook_event_type = _event_payload_json1.webhook_event_type) === null || _event_payload_json_webhook_event_type === void 0 ? void 0 : _event_payload_json_webhook_event_type.toLowerCase();\n                // Debug do status\n                console.log(\"Status debug - order_status: \".concat(orderStatus, \", webhook_event_type: \").concat(webhookEvent));\n                // Mapear status baseado nos campos da Kiwify\n                if (orderStatus === 'approved' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('approved'))) return 'paid';\n                if (orderStatus === 'paid' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('paid'))) return 'paid';\n                if (orderStatus === 'refunded' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('refund'))) return 'refunded';\n                if (orderStatus === 'canceled' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('cancel'))) return 'canceled';\n                if (orderStatus === 'chargeback' || (webhookEvent === null || webhookEvent === void 0 ? void 0 : webhookEvent.includes('chargeback'))) return 'chargeback';\n                return 'pending' // default\n                ;\n            })(),\n            gross_amount: (()=>{\n                var _event_payload_json_Commissions, _event_payload_json;\n                const rawValue = ((_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : (_event_payload_json_Commissions = _event_payload_json.Commissions) === null || _event_payload_json_Commissions === void 0 ? void 0 : _event_payload_json_Commissions.product_base_price) || 0;\n                const convertedValue = rawValue / 100;\n                return convertedValue;\n            })(),\n            net_amount: (()=>{\n                var _event_payload_json;\n                const commissions = (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.Commissions;\n                // Campo principal para comissões na Kiwify: my_commission\n                const myCommission = commissions === null || commissions === void 0 ? void 0 : commissions.my_commission;\n                // Campo usado nos Example Products: settlement_amount  \n                const settlementAmount = commissions === null || commissions === void 0 ? void 0 : commissions.settlement_amount;\n                // Priorizar my_commission que é usado nas ordens reais da Kiwify\n                const rawValue = myCommission || settlementAmount || 0;\n                const convertedValue = rawValue / 100;\n                return convertedValue;\n            })(),\n            currency: ((_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_Commissions = _event_payload_json1.Commissions) === null || _event_payload_json_Commissions === void 0 ? void 0 : _event_payload_json_Commissions.currency) || 'BRL',\n            customer_name: ((_event_payload_json2 = event.payload_json) === null || _event_payload_json2 === void 0 ? void 0 : (_event_payload_json_Customer = _event_payload_json2.Customer) === null || _event_payload_json_Customer === void 0 ? void 0 : _event_payload_json_Customer.full_name) || 'N/A',\n            customer_email: ((_event_payload_json3 = event.payload_json) === null || _event_payload_json3 === void 0 ? void 0 : (_event_payload_json_Customer1 = _event_payload_json3.Customer) === null || _event_payload_json_Customer1 === void 0 ? void 0 : _event_payload_json_Customer1.email) || 'N/A',\n            product_name: ((_event_payload_json4 = event.payload_json) === null || _event_payload_json4 === void 0 ? void 0 : (_event_payload_json_Product = _event_payload_json4.Product) === null || _event_payload_json_Product === void 0 ? void 0 : _event_payload_json_Product.product_name) || 'N/A',\n            product_id: ((_event_payload_json5 = event.payload_json) === null || _event_payload_json5 === void 0 ? void 0 : (_event_payload_json_Product1 = _event_payload_json5.Product) === null || _event_payload_json_Product1 === void 0 ? void 0 : _event_payload_json_Product1.product_id) || 'N/A',\n            platform_name: ((_event_platforms = event.platforms) === null || _event_platforms === void 0 ? void 0 : _event_platforms.name) || 'Kiwify',\n            webhook_payload: event.payload_json,\n            import_tag: null,\n            is_imported: false,\n            platforms: event.platforms,\n            customers: {\n                name: (_event_payload_json6 = event.payload_json) === null || _event_payload_json6 === void 0 ? void 0 : (_event_payload_json_Customer2 = _event_payload_json6.Customer) === null || _event_payload_json_Customer2 === void 0 ? void 0 : _event_payload_json_Customer2.full_name,\n                email: (_event_payload_json7 = event.payload_json) === null || _event_payload_json7 === void 0 ? void 0 : (_event_payload_json_Customer3 = _event_payload_json7.Customer) === null || _event_payload_json_Customer3 === void 0 ? void 0 : _event_payload_json_Customer3.email\n            }\n        };\n    });\n    // Agrupar por platform_order_id e manter apenas o mais recente de cada pedido\n    const uniqueOrdersMap = new Map();\n    allTransformedData === null || allTransformedData === void 0 ? void 0 : allTransformedData.forEach((order)=>{\n        const orderId = order.platform_order_id;\n        // Pular pedidos sem ID válido (para evitar agrupar todos os \"N/A\")\n        if (!orderId || orderId === 'N/A') {\n            // Usar o ID do evento como chave única para pedidos sem order_id\n            uniqueOrdersMap.set(\"event_\".concat(order.id), order);\n            return;\n        }\n        // Se já existe um pedido com este ID, verificar qual é mais recente\n        if (uniqueOrdersMap.has(orderId)) {\n            const existingOrder = uniqueOrdersMap.get(orderId);\n            // Comparar datas - manter o mais recente\n            if (new Date(order.order_date) > new Date(existingOrder.order_date)) {\n                uniqueOrdersMap.set(orderId, order);\n            }\n        } else {\n            // Primeiro registro deste pedido\n            uniqueOrdersMap.set(orderId, order);\n        }\n    });\n    // Converter Map de volta para array e ordenar por data (mais recente primeiro)\n    const transformedData = Array.from(uniqueOrdersMap.values()).sort((a, b)=>new Date(b.order_date).getTime() - new Date(a.order_date).getTime());\n    return {\n        data: transformedData,\n        error\n    };\n}\n// Função para deletar um evento/pedido\nasync function deleteEvent(eventId) {\n    const { error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').delete().eq('id', eventId);\n    return {\n        error\n    };\n}\nasync function getOrderById(id) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('orders').select(\"\\n      *,\\n      platforms(name),\\n      customers(*)\\n    \").eq('id', id).single();\n    return {\n        data,\n        error\n    };\n}\n// Events\nasync function getRawEvents() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      *,\\n      platforms(name)\\n    \").order('received_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Webhook Events (atual) - usando raw_events\nasync function getWebhookEvents() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 100;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('raw_events').select(\"\\n      id,\\n      event_type,\\n      payload_json,\\n      received_at,\\n      platform_id,\\n      platforms(name)\\n    \").order('received_at', {\n        ascending: false\n    }).limit(limit);\n    // Transformar para formato esperado pela página\n    const transformedData = data === null || data === void 0 ? void 0 : data.map((event)=>{\n        var _event_platforms, _event_payload_json, _event_payload_json_Customer, _event_payload_json1;\n        return {\n            id: event.id.toString(),\n            platform: ((_event_platforms = event.platforms) === null || _event_platforms === void 0 ? void 0 : _event_platforms.name) || 'unknown',\n            event_type: event.event_type || 'unknown',\n            order_id: (_event_payload_json = event.payload_json) === null || _event_payload_json === void 0 ? void 0 : _event_payload_json.order_id,\n            customer_email: (_event_payload_json1 = event.payload_json) === null || _event_payload_json1 === void 0 ? void 0 : (_event_payload_json_Customer = _event_payload_json1.Customer) === null || _event_payload_json_Customer === void 0 ? void 0 : _event_payload_json_Customer.email,\n            processed: true,\n            error_message: null,\n            payload: event.payload_json,\n            created_at: event.received_at\n        };\n    });\n    return {\n        data: transformedData,\n        error\n    };\n}\nasync function getEventErrors() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('event_errors').select(\"\\n      *,\\n      platforms(name)\\n    \").order('error_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Customers\nasync function getCustomers() {\n    let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('customers').select('*').order('created_at', {\n        ascending: false\n    }).limit(limit);\n    return {\n        data: data,\n        error\n    };\n}\n// Platforms\nasync function getPlatforms() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('platforms').select('*').order('name');\n    return {\n        data: data,\n        error\n    };\n}\n// Ad Insights\nasync function getAdInsights() {\n    let days = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 30;\n    const startDate = new Date(Date.now() - days * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('ad_insights_daily').select('*').gte('date', startDate).order('date', {\n        ascending: false\n    });\n    return {\n        data: data,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGF0YWJhc2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBcUM7QUFHckMsMEJBQTBCO0FBQ25CLGVBQWVDO0lBQ3BCLDBCQUEwQjtJQUMxQixNQUFNLEVBQUVDLE1BQU1DLE1BQU0sRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNwQ0ksSUFBSSxDQUFDLFVBQ0xDLE1BQU0sQ0FBQyx3Q0FDUEMsR0FBRyxDQUFDLGNBQWMsSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLElBQUksS0FBSyxLQUFLLEtBQUssTUFBTUMsV0FBVyxJQUM1RUMsS0FBSyxDQUFDLGNBQWM7UUFBRUMsV0FBVztJQUFNO0lBRTFDLCtCQUErQjtJQUMvQixNQUFNQyxlQUFlLElBQUlMLEtBQUssSUFBSUEsT0FBT00sV0FBVyxJQUFJLElBQUlOLE9BQU9PLFFBQVEsSUFBSSxHQUFHTCxXQUFXO0lBQzdGLE1BQU0sRUFBRVAsTUFBTWEsYUFBYSxFQUFFLEdBQUcsTUFBTWYsK0NBQVFBLENBQzNDSSxJQUFJLENBQUMsVUFDTEMsTUFBTSxDQUFDLDRCQUNQVyxFQUFFLENBQUMsVUFBVSxRQUNiVixHQUFHLENBQUMsY0FBY007SUFFckIsb0JBQW9CO0lBQ3BCLE1BQU0sRUFBRVYsTUFBTWUsWUFBWSxFQUFFLEdBQUcsTUFBTWpCLCtDQUFRQSxDQUMxQ0ksSUFBSSxDQUFDLGNBQ0xDLE1BQU0sQ0FBQyw2REFDUEssS0FBSyxDQUFDLGVBQWU7UUFBRUMsV0FBVztJQUFNLEdBQ3hDTyxLQUFLLENBQUM7SUFFVCxrQkFBa0I7SUFDbEIsTUFBTSxFQUFFQyxPQUFPQyxVQUFVLEVBQUUsR0FBRyxNQUFNcEIsK0NBQVFBLENBQ3pDSSxJQUFJLENBQUMsZ0JBQ0xDLE1BQU0sQ0FBQyxNQUFNO1FBQUVjLE9BQU87SUFBUSxHQUM5QmIsR0FBRyxDQUFDLFlBQVksSUFBSUMsS0FBS0EsS0FBS0MsR0FBRyxLQUFLLEtBQUssS0FBSyxLQUFLLE1B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bHVjYXMvZnJvbnRlbmQvc3JjL2xpYi9kYXRhYmFzZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4vc3VwYWJhc2UnXG5pbXBvcnQgdHlwZSB7IE9yZGVyLCBDdXN0b21lciwgUmF3RXZlbnQsIEV2ZW50RXJyb3IsIFBsYXRmb3JtLCBBZEluc2lnaHQgfSBmcm9tICcuL3N1cGFiYXNlJ1xuXG4vLyBEYXNoYm9hcmQgZGF0YSBmZXRjaGluZ1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldERhc2hib2FyZFN0YXRzKCkge1xuICAvLyBHZXQgcmVjZW50IG9yZGVycyBjb3VudFxuICBjb25zdCB7IGRhdGE6IG9yZGVycyB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgnb3JkZXJzJylcbiAgICAuc2VsZWN0KCdpZCwgZ3Jvc3NfYW1vdW50LCBzdGF0dXMsIGNyZWF0ZWRfYXQnKVxuICAgIC5ndGUoJ2NyZWF0ZWRfYXQnLCBuZXcgRGF0ZShEYXRlLm5vdygpIC0gNyAqIDI0ICogNjAgKiA2MCAqIDEwMDApLnRvSVNPU3RyaW5nKCkpXG4gICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgLy8gR2V0IHRvdGFsIHJldmVudWUgdGhpcyBtb250aFxuICBjb25zdCBzdGFydE9mTW9udGggPSBuZXcgRGF0ZShuZXcgRGF0ZSgpLmdldEZ1bGxZZWFyKCksIG5ldyBEYXRlKCkuZ2V0TW9udGgoKSwgMSkudG9JU09TdHJpbmcoKVxuICBjb25zdCB7IGRhdGE6IG1vbnRobHlPcmRlcnMgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ29yZGVycycpXG4gICAgLnNlbGVjdCgnZ3Jvc3NfYW1vdW50LCBuZXRfYW1vdW50JylcbiAgICAuZXEoJ3N0YXR1cycsICdwYWlkJylcbiAgICAuZ3RlKCdjcmVhdGVkX2F0Jywgc3RhcnRPZk1vbnRoKVxuXG4gIC8vIEdldCByZWNlbnQgZXZlbnRzXG4gIGNvbnN0IHsgZGF0YTogcmVjZW50RXZlbnRzIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdyYXdfZXZlbnRzJylcbiAgICAuc2VsZWN0KCdpZCwgZXZlbnRfdHlwZSwgcmVjZWl2ZWRfYXQsIHBsYXRmb3JtX2lkLCBwbGF0Zm9ybXMobmFtZSknKVxuICAgIC5vcmRlcigncmVjZWl2ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAubGltaXQoMTApXG5cbiAgLy8gR2V0IGVycm9yIGNvdW50XG4gIGNvbnN0IHsgY291bnQ6IGVycm9yQ291bnQgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ2V2ZW50X2Vycm9ycycpXG4gICAgLnNlbGVjdCgnaWQnLCB7IGNvdW50OiAnZXhhY3QnIH0pXG4gICAgLmd0ZSgnZXJyb3JfYXQnLCBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKSlcblxuICBjb25zdCB0b3RhbFJldmVudWUgPSBtb250aGx5T3JkZXJzPy5yZWR1Y2UoKHN1bSwgb3JkZXIpID0+IHN1bSArIChvcmRlci5ncm9zc19hbW91bnQgfHwgMCksIDApIHx8IDBcbiAgY29uc3QgdG90YWxPcmRlcnMgPSBvcmRlcnM/Lmxlbmd0aCB8fCAwXG4gIGNvbnN0IHBhaWRPcmRlcnMgPSBvcmRlcnM/LmZpbHRlcihvID0+IG8uc3RhdHVzID09PSAncGFpZCcpLmxlbmd0aCB8fCAwXG4gIFxuICByZXR1cm4ge1xuICAgIHRvdGFsT3JkZXJzLFxuICAgIHBhaWRPcmRlcnMsXG4gICAgdG90YWxSZXZlbnVlLFxuICAgIHJlY2VudEV2ZW50czogcmVjZW50RXZlbnRzIHx8IFtdLFxuICAgIGVycm9yQ291bnQ6IGVycm9yQ291bnQgfHwgMFxuICB9XG59XG5cbi8vIE9yZGVycyAtIGFnb3JhIGJ1c2NhbmRvIGRpcmV0YW1lbnRlIGRvcyB3ZWJob29rcyBkYSBLaXdpZnlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRPcmRlcnMobGltaXQ/OiBudW1iZXIsIHN0YXJ0RGF0ZT86IHN0cmluZywgZW5kRGF0ZT86IHN0cmluZykge1xuICBsZXQgcXVlcnkgPSBzdXBhYmFzZVxuICAgIC5mcm9tKCdyYXdfZXZlbnRzJylcbiAgICAuc2VsZWN0KGBcbiAgICAgIGlkLFxuICAgICAgZXZlbnRfdHlwZSxcbiAgICAgIHBheWxvYWRfanNvbixcbiAgICAgIHJlY2VpdmVkX2F0LFxuICAgICAgaW1wb3J0X3RhZyxcbiAgICAgIHBsYXRmb3JtcyhuYW1lKVxuICAgIGApXG5cbiAgLy8gQXBsaWNhciBmaWx0cm8gZGUgZGF0YSBpbsOtY2lvIHNlIGZvcm5lY2lkb1xuICBpZiAoc3RhcnREYXRlKSB7XG4gICAgcXVlcnkgPSBxdWVyeS5ndGUoJ3JlY2VpdmVkX2F0JywgYCR7c3RhcnREYXRlfVQwMDowMDowMC4wMDBaYClcbiAgfVxuXG4gIC8vIEFwbGljYXIgZmlsdHJvIGRlIGRhdGEgZmltIHNlIGZvcm5lY2lkb1xuICBpZiAoZW5kRGF0ZSkge1xuICAgIHF1ZXJ5ID0gcXVlcnkubHRlKCdyZWNlaXZlZF9hdCcsIGAke2VuZERhdGV9VDIzOjU5OjU5Ljk5OVpgKVxuICB9XG5cbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgcXVlcnkub3JkZXIoJ3JlY2VpdmVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgaWYgKGVycm9yKSByZXR1cm4geyBkYXRhOiBudWxsLCBlcnJvciB9XG5cbiAgLy8gVHJhbnNmb3JtYXIgZGFkb3MgZG8gd2ViaG9vayBwYXJhIGZvcm1hdG8gZGUgcGVkaWRvc1xuICBjb25zdCBhbGxUcmFuc2Zvcm1lZERhdGEgPSBkYXRhPy5tYXAoZXZlbnQgPT4ge1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBpZDogZXZlbnQuaWQudG9TdHJpbmcoKSxcbiAgICAgIHBsYXRmb3JtX29yZGVyX2lkOiBldmVudC5wYXlsb2FkX2pzb24/Lm9yZGVyX2lkIHx8ICdOL0EnLFxuICAgICAgb3JkZXJfZGF0ZTogZXZlbnQucmVjZWl2ZWRfYXQsXG4gICAgICBjcmVhdGVkX2F0OiBldmVudC5yZWNlaXZlZF9hdCxcbiAgICAgIHN0YXR1czogKCgpID0+IHtcbiAgICAgICAgY29uc3Qgb3JkZXJTdGF0dXMgPSBldmVudC5wYXlsb2FkX2pzb24/Lm9yZGVyX3N0YXR1cz8udG9Mb3dlckNhc2UoKVxuICAgICAgICBjb25zdCB3ZWJob29rRXZlbnQgPSBldmVudC5wYXlsb2FkX2pzb24/LndlYmhvb2tfZXZlbnRfdHlwZT8udG9Mb3dlckNhc2UoKVxuICAgICAgICBcbiAgICAgICAgLy8gRGVidWcgZG8gc3RhdHVzXG4gICAgICAgIGNvbnNvbGUubG9nKGBTdGF0dXMgZGVidWcgLSBvcmRlcl9zdGF0dXM6ICR7b3JkZXJTdGF0dXN9LCB3ZWJob29rX2V2ZW50X3R5cGU6ICR7d2ViaG9va0V2ZW50fWApXG4gICAgICAgIFxuICAgICAgICAvLyBNYXBlYXIgc3RhdHVzIGJhc2VhZG8gbm9zIGNhbXBvcyBkYSBLaXdpZnlcbiAgICAgICAgaWYgKG9yZGVyU3RhdHVzID09PSAnYXBwcm92ZWQnIHx8IHdlYmhvb2tFdmVudD8uaW5jbHVkZXMoJ2FwcHJvdmVkJykpIHJldHVybiAncGFpZCdcbiAgICAgICAgaWYgKG9yZGVyU3RhdHVzID09PSAncGFpZCcgfHwgd2ViaG9va0V2ZW50Py5pbmNsdWRlcygncGFpZCcpKSByZXR1cm4gJ3BhaWQnXG4gICAgICAgIGlmIChvcmRlclN0YXR1cyA9PT0gJ3JlZnVuZGVkJyB8fCB3ZWJob29rRXZlbnQ/LmluY2x1ZGVzKCdyZWZ1bmQnKSkgcmV0dXJuICdyZWZ1bmRlZCdcbiAgICAgICAgaWYgKG9yZGVyU3RhdHVzID09PSAnY2FuY2VsZWQnIHx8IHdlYmhvb2tFdmVudD8uaW5jbHVkZXMoJ2NhbmNlbCcpKSByZXR1cm4gJ2NhbmNlbGVkJ1xuICAgICAgICBpZiAob3JkZXJTdGF0dXMgPT09ICdjaGFyZ2ViYWNrJyB8fCB3ZWJob29rRXZlbnQ/LmluY2x1ZGVzKCdjaGFyZ2ViYWNrJykpIHJldHVybiAnY2hhcmdlYmFjaydcbiAgICAgICAgXG4gICAgICAgIHJldHVybiAncGVuZGluZycgLy8gZGVmYXVsdFxuICAgICAgfSkoKSxcbiAgICAgIGdyb3NzX2Ftb3VudDogKCgpID0+IHtcbiAgICAgICAgY29uc3QgcmF3VmFsdWUgPSBldmVudC5wYXlsb2FkX2pzb24/LkNvbW1pc3Npb25zPy5wcm9kdWN0X2Jhc2VfcHJpY2UgfHwgMFxuICAgICAgICBjb25zdCBjb252ZXJ0ZWRWYWx1ZSA9IHJhd1ZhbHVlIC8gMTAwXG4gICAgICAgIHJldHVybiBjb252ZXJ0ZWRWYWx1ZVxuICAgICAgfSkoKSxcbiAgICAgIG5ldF9hbW91bnQ6ICgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNvbW1pc3Npb25zID0gZXZlbnQucGF5bG9hZF9qc29uPy5Db21taXNzaW9uc1xuICAgICAgICBcbiAgICAgICAgLy8gQ2FtcG8gcHJpbmNpcGFsIHBhcmEgY29taXNzw7VlcyBuYSBLaXdpZnk6IG15X2NvbW1pc3Npb25cbiAgICAgICAgY29uc3QgbXlDb21taXNzaW9uID0gY29tbWlzc2lvbnM/Lm15X2NvbW1pc3Npb25cbiAgICAgICAgLy8gQ2FtcG8gdXNhZG8gbm9zIEV4YW1wbGUgUHJvZHVjdHM6IHNldHRsZW1lbnRfYW1vdW50ICBcbiAgICAgICAgY29uc3Qgc2V0dGxlbWVudEFtb3VudCA9IGNvbW1pc3Npb25zPy5zZXR0bGVtZW50X2Ftb3VudFxuICAgICAgICBcbiAgICAgICAgLy8gUHJpb3JpemFyIG15X2NvbW1pc3Npb24gcXVlIMOpIHVzYWRvIG5hcyBvcmRlbnMgcmVhaXMgZGEgS2l3aWZ5XG4gICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gbXlDb21taXNzaW9uIHx8IHNldHRsZW1lbnRBbW91bnQgfHwgMFxuICAgICAgICBjb25zdCBjb252ZXJ0ZWRWYWx1ZSA9IHJhd1ZhbHVlIC8gMTAwXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gY29udmVydGVkVmFsdWVcbiAgICAgIH0pKCksXG4gICAgICBjdXJyZW5jeTogZXZlbnQucGF5bG9hZF9qc29uPy5Db21taXNzaW9ucz8uY3VycmVuY3kgfHwgJ0JSTCcsXG4gICAgICBjdXN0b21lcl9uYW1lOiBldmVudC5wYXlsb2FkX2pzb24/LkN1c3RvbWVyPy5mdWxsX25hbWUgfHwgJ04vQScsXG4gICAgICBjdXN0b21lcl9lbWFpbDogZXZlbnQucGF5bG9hZF9qc29uPy5DdXN0b21lcj8uZW1haWwgfHwgJ04vQScsXG4gICAgICBwcm9kdWN0X25hbWU6IGV2ZW50LnBheWxvYWRfanNvbj8uUHJvZHVjdD8ucHJvZHVjdF9uYW1lIHx8ICdOL0EnLFxuICAgICAgcHJvZHVjdF9pZDogZXZlbnQucGF5bG9hZF9qc29uPy5Qcm9kdWN0Py5wcm9kdWN0X2lkIHx8ICdOL0EnLFxuICAgICAgcGxhdGZvcm1fbmFtZTogZXZlbnQucGxhdGZvcm1zPy5uYW1lIHx8ICdLaXdpZnknLFxuICAgICAgd2ViaG9va19wYXlsb2FkOiBldmVudC5wYXlsb2FkX2pzb24sIC8vIFBhcmEgbyBtb2RhbFxuICAgICAgaW1wb3J0X3RhZzogbnVsbCwgLy8gVGVtcG9yYXJpYW1lbnRlIG51bGwgYXTDqSBjcmlhciBhIGNvbHVuYVxuICAgICAgaXNfaW1wb3J0ZWQ6IGZhbHNlLCAvLyBUZW1wb3JhcmlhbWVudGUgZmFsc2UgYXTDqSBjcmlhciBhIGNvbHVuYVxuICAgICAgcGxhdGZvcm1zOiBldmVudC5wbGF0Zm9ybXMsXG4gICAgICBjdXN0b21lcnM6IHtcbiAgICAgICAgbmFtZTogZXZlbnQucGF5bG9hZF9qc29uPy5DdXN0b21lcj8uZnVsbF9uYW1lLFxuICAgICAgICBlbWFpbDogZXZlbnQucGF5bG9hZF9qc29uPy5DdXN0b21lcj8uZW1haWxcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgLy8gQWdydXBhciBwb3IgcGxhdGZvcm1fb3JkZXJfaWQgZSBtYW50ZXIgYXBlbmFzIG8gbWFpcyByZWNlbnRlIGRlIGNhZGEgcGVkaWRvXG4gIGNvbnN0IHVuaXF1ZU9yZGVyc01hcCA9IG5ldyBNYXAoKVxuICBcbiAgYWxsVHJhbnNmb3JtZWREYXRhPy5mb3JFYWNoKG9yZGVyID0+IHtcbiAgICBjb25zdCBvcmRlcklkID0gb3JkZXIucGxhdGZvcm1fb3JkZXJfaWRcbiAgICBcbiAgICAvLyBQdWxhciBwZWRpZG9zIHNlbSBJRCB2w6FsaWRvIChwYXJhIGV2aXRhciBhZ3J1cGFyIHRvZG9zIG9zIFwiTi9BXCIpXG4gICAgaWYgKCFvcmRlcklkIHx8IG9yZGVySWQgPT09ICdOL0EnKSB7XG4gICAgICAvLyBVc2FyIG8gSUQgZG8gZXZlbnRvIGNvbW8gY2hhdmUgw7puaWNhIHBhcmEgcGVkaWRvcyBzZW0gb3JkZXJfaWRcbiAgICAgIHVuaXF1ZU9yZGVyc01hcC5zZXQoYGV2ZW50XyR7b3JkZXIuaWR9YCwgb3JkZXIpXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgXG4gICAgLy8gU2UgasOhIGV4aXN0ZSB1bSBwZWRpZG8gY29tIGVzdGUgSUQsIHZlcmlmaWNhciBxdWFsIMOpIG1haXMgcmVjZW50ZVxuICAgIGlmICh1bmlxdWVPcmRlcnNNYXAuaGFzKG9yZGVySWQpKSB7XG4gICAgICBjb25zdCBleGlzdGluZ09yZGVyID0gdW5pcXVlT3JkZXJzTWFwLmdldChvcmRlcklkKVxuICAgICAgLy8gQ29tcGFyYXIgZGF0YXMgLSBtYW50ZXIgbyBtYWlzIHJlY2VudGVcbiAgICAgIGlmIChuZXcgRGF0ZShvcmRlci5vcmRlcl9kYXRlKSA+IG5ldyBEYXRlKGV4aXN0aW5nT3JkZXIub3JkZXJfZGF0ZSkpIHtcbiAgICAgICAgdW5pcXVlT3JkZXJzTWFwLnNldChvcmRlcklkLCBvcmRlcilcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgLy8gUHJpbWVpcm8gcmVnaXN0cm8gZGVzdGUgcGVkaWRvXG4gICAgICB1bmlxdWVPcmRlcnNNYXAuc2V0KG9yZGVySWQsIG9yZGVyKVxuICAgIH1cbiAgfSlcblxuICAvLyBDb252ZXJ0ZXIgTWFwIGRlIHZvbHRhIHBhcmEgYXJyYXkgZSBvcmRlbmFyIHBvciBkYXRhIChtYWlzIHJlY2VudGUgcHJpbWVpcm8pXG4gIGNvbnN0IHRyYW5zZm9ybWVkRGF0YSA9IEFycmF5LmZyb20odW5pcXVlT3JkZXJzTWFwLnZhbHVlcygpKVxuICAgIC5zb3J0KChhLCBiKSA9PiBuZXcgRGF0ZShiLm9yZGVyX2RhdGUpLmdldFRpbWUoKSAtIG5ldyBEYXRlKGEub3JkZXJfZGF0ZSkuZ2V0VGltZSgpKVxuXG4gIHJldHVybiB7IGRhdGE6IHRyYW5zZm9ybWVkRGF0YSwgZXJyb3IgfVxufVxuXG4vLyBGdW7Dp8OjbyBwYXJhIGRlbGV0YXIgdW0gZXZlbnRvL3BlZGlkb1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGRlbGV0ZUV2ZW50KGV2ZW50SWQ6IHN0cmluZykge1xuICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdyYXdfZXZlbnRzJylcbiAgICAuZGVsZXRlKClcbiAgICAuZXEoJ2lkJywgZXZlbnRJZClcblxuICByZXR1cm4geyBlcnJvciB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRPcmRlckJ5SWQoaWQ6IHN0cmluZykge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdvcmRlcnMnKVxuICAgIC5zZWxlY3QoYFxuICAgICAgKixcbiAgICAgIHBsYXRmb3JtcyhuYW1lKSxcbiAgICAgIGN1c3RvbWVycygqKVxuICAgIGApXG4gICAgLmVxKCdpZCcsIGlkKVxuICAgIC5zaW5nbGUoKVxuXG4gIHJldHVybiB7IGRhdGEsIGVycm9yIH1cbn1cblxuLy8gRXZlbnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UmF3RXZlbnRzKGxpbWl0ID0gMTAwKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3Jhd19ldmVudHMnKVxuICAgIC5zZWxlY3QoYFxuICAgICAgKixcbiAgICAgIHBsYXRmb3JtcyhuYW1lKVxuICAgIGApXG4gICAgLm9yZGVyKCdyZWNlaXZlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgIC5saW1pdChsaW1pdClcblxuICByZXR1cm4geyBkYXRhOiBkYXRhIGFzIChSYXdFdmVudCAmIHsgcGxhdGZvcm1zPzogUGxhdGZvcm0gfSlbXSwgZXJyb3IgfVxufVxuXG4vLyBXZWJob29rIEV2ZW50cyAoYXR1YWwpIC0gdXNhbmRvIHJhd19ldmVudHNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRXZWJob29rRXZlbnRzKGxpbWl0ID0gMTAwKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3Jhd19ldmVudHMnKVxuICAgIC5zZWxlY3QoYFxuICAgICAgaWQsXG4gICAgICBldmVudF90eXBlLFxuICAgICAgcGF5bG9hZF9qc29uLFxuICAgICAgcmVjZWl2ZWRfYXQsXG4gICAgICBwbGF0Zm9ybV9pZCxcbiAgICAgIHBsYXRmb3JtcyhuYW1lKVxuICAgIGApXG4gICAgLm9yZGVyKCdyZWNlaXZlZF9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgIC5saW1pdChsaW1pdClcblxuICAvLyBUcmFuc2Zvcm1hciBwYXJhIGZvcm1hdG8gZXNwZXJhZG8gcGVsYSBww6FnaW5hXG4gIGNvbnN0IHRyYW5zZm9ybWVkRGF0YSA9IGRhdGE/Lm1hcChldmVudCA9PiAoe1xuICAgIGlkOiBldmVudC5pZC50b1N0cmluZygpLFxuICAgIHBsYXRmb3JtOiBldmVudC5wbGF0Zm9ybXM/Lm5hbWUgfHwgJ3Vua25vd24nLFxuICAgIGV2ZW50X3R5cGU6IGV2ZW50LmV2ZW50X3R5cGUgfHwgJ3Vua25vd24nLFxuICAgIG9yZGVyX2lkOiBldmVudC5wYXlsb2FkX2pzb24/Lm9yZGVyX2lkLFxuICAgIGN1c3RvbWVyX2VtYWlsOiBldmVudC5wYXlsb2FkX2pzb24/LkN1c3RvbWVyPy5lbWFpbCxcbiAgICBwcm9jZXNzZWQ6IHRydWUsIC8vIFBvciBlbnF1YW50byBhc3N1bWlyIGNvbW8gcHJvY2Vzc2Fkb1xuICAgIGVycm9yX21lc3NhZ2U6IG51bGwsXG4gICAgcGF5bG9hZDogZXZlbnQucGF5bG9hZF9qc29uLFxuICAgIGNyZWF0ZWRfYXQ6IGV2ZW50LnJlY2VpdmVkX2F0XG4gIH0pKVxuXG4gIHJldHVybiB7IGRhdGE6IHRyYW5zZm9ybWVkRGF0YSwgZXJyb3IgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RXZlbnRFcnJvcnMobGltaXQgPSA1MCkge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdldmVudF9lcnJvcnMnKVxuICAgIC5zZWxlY3QoYFxuICAgICAgKixcbiAgICAgIHBsYXRmb3JtcyhuYW1lKVxuICAgIGApXG4gICAgLm9yZGVyKCdlcnJvcl9hdCcsIHsgYXNjZW5kaW5nOiBmYWxzZSB9KVxuICAgIC5saW1pdChsaW1pdClcblxuICByZXR1cm4geyBkYXRhOiBkYXRhIGFzIChFdmVudEVycm9yICYgeyBwbGF0Zm9ybXM/OiBQbGF0Zm9ybSB9KVtdLCBlcnJvciB9XG59XG5cbi8vIEN1c3RvbWVyc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEN1c3RvbWVycyhsaW1pdCA9IDUwKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ2N1c3RvbWVycycpXG4gICAgLnNlbGVjdCgnKicpXG4gICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG4gICAgLmxpbWl0KGxpbWl0KVxuXG4gIHJldHVybiB7IGRhdGE6IGRhdGEgYXMgQ3VzdG9tZXJbXSwgZXJyb3IgfVxufVxuXG4vLyBQbGF0Zm9ybXNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQbGF0Zm9ybXMoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3BsYXRmb3JtcycpXG4gICAgLnNlbGVjdCgnKicpXG4gICAgLm9yZGVyKCduYW1lJylcblxuICByZXR1cm4geyBkYXRhOiBkYXRhIGFzIFBsYXRmb3JtW10sIGVycm9yIH1cbn1cblxuLy8gQWQgSW5zaWdodHNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBZEluc2lnaHRzKGRheXMgPSAzMCkge1xuICBjb25zdCBzdGFydERhdGUgPSBuZXcgRGF0ZShEYXRlLm5vdygpIC0gZGF5cyAqIDI0ICogNjAgKiA2MCAqIDEwMDApLnRvSVNPU3RyaW5nKCkuc3BsaXQoJ1QnKVswXVxuICBcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgnYWRfaW5zaWdodHNfZGFpbHknKVxuICAgIC5zZWxlY3QoJyonKVxuICAgIC5ndGUoJ2RhdGUnLCBzdGFydERhdGUpXG4gICAgLm9yZGVyKCdkYXRlJywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgcmV0dXJuIHsgZGF0YTogZGF0YSBhcyBBZEluc2lnaHRbXSwgZXJyb3IgfVxufSJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImdldERhc2hib2FyZFN0YXRzIiwiZGF0YSIsIm9yZGVycyIsImZyb20iLCJzZWxlY3QiLCJndGUiLCJEYXRlIiwibm93IiwidG9JU09TdHJpbmciLCJvcmRlciIsImFzY2VuZGluZyIsInN0YXJ0T2ZNb250aCIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJtb250aGx5T3JkZXJzIiwiZXEiLCJyZWNlbnRFdmVudHMiLCJsaW1pdCIsImNvdW50IiwiZXJyb3JDb3VudCIsInRvdGFsUmV2ZW51ZSIsInJlZHVjZSIsInN1bSIsImdyb3NzX2Ftb3VudCIsInRvdGFsT3JkZXJzIiwibGVuZ3RoIiwicGFpZE9yZGVycyIsImZpbHRlciIsIm8iLCJzdGF0dXMiLCJnZXRPcmRlcnMiLCJzdGFydERhdGUiLCJlbmREYXRlIiwicXVlcnkiLCJsdGUiLCJlcnJvciIsImFsbFRyYW5zZm9ybWVkRGF0YSIsIm1hcCIsImV2ZW50IiwiaWQiLCJ0b1N0cmluZyIsInBsYXRmb3JtX29yZGVyX2lkIiwicGF5bG9hZF9qc29uIiwib3JkZXJfaWQiLCJvcmRlcl9kYXRlIiwicmVjZWl2ZWRfYXQiLCJjcmVhdGVkX2F0Iiwib3JkZXJTdGF0dXMiLCJvcmRlcl9zdGF0dXMiLCJ0b0xvd2VyQ2FzZSIsIndlYmhvb2tFdmVudCIsIndlYmhvb2tfZXZlbnRfdHlwZSIsImNvbnNvbGUiLCJsb2ciLCJpbmNsdWRlcyIsInJhd1ZhbHVlIiwiQ29tbWlzc2lvbnMiLCJwcm9kdWN0X2Jhc2VfcHJpY2UiLCJjb252ZXJ0ZWRWYWx1ZSIsIm5ldF9hbW91bnQiLCJjb21taXNzaW9ucyIsIm15Q29tbWlzc2lvbiIsIm15X2NvbW1pc3Npb24iLCJzZXR0bGVtZW50QW1vdW50Iiwic2V0dGxlbWVudF9hbW91bnQiLCJjdXJyZW5jeSIsImN1c3RvbWVyX25hbWUiLCJDdXN0b21lciIsImZ1bGxfbmFtZSIsImN1c3RvbWVyX2VtYWlsIiwiZW1haWwiLCJwcm9kdWN0X25hbWUiLCJQcm9kdWN0IiwicHJvZHVjdF9pZCIsInBsYXRmb3JtX25hbWUiLCJwbGF0Zm9ybXMiLCJuYW1lIiwid2ViaG9va19wYXlsb2FkIiwiaW1wb3J0X3RhZyIsImlzX2ltcG9ydGVkIiwiY3VzdG9tZXJzIiwidW5pcXVlT3JkZXJzTWFwIiwiTWFwIiwiZm9yRWFjaCIsIm9yZGVySWQiLCJzZXQiLCJoYXMiLCJleGlzdGluZ09yZGVyIiwiZ2V0IiwidHJhbnNmb3JtZWREYXRhIiwiQXJyYXkiLCJ2YWx1ZXMiLCJzb3J0IiwiYSIsImIiLCJnZXRUaW1lIiwiZGVsZXRlRXZlbnQiLCJldmVudElkIiwiZGVsZXRlIiwiZ2V0T3JkZXJCeUlkIiwic2luZ2xlIiwiZ2V0UmF3RXZlbnRzIiwiZ2V0V2ViaG9va0V2ZW50cyIsInBsYXRmb3JtIiwiZXZlbnRfdHlwZSIsInByb2Nlc3NlZCIsImVycm9yX21lc3NhZ2UiLCJwYXlsb2FkIiwiZ2V0RXZlbnRFcnJvcnMiLCJnZXRDdXN0b21lcnMiLCJnZXRQbGF0Zm9ybXMiLCJnZXRBZEluc2lnaHRzIiwiZGF5cyIsInNwbGl0Il0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/database.ts\n"));

/***/ })

});